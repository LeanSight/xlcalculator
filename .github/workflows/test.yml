name: xlcalculator NumPy 2.0 Fork Tests

on: [push, pull_request]

jobs:
  test:
    name: Python 3.13 + NumPy 2.0 Tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.13']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test,excel_functions]
        
    - name: Verify NumPy 2.0+ installation
      run: |
        python -c "import numpy as np; print(f'NumPy version: {np.__version__}'); assert np.__version__.startswith('2.'), f'Expected NumPy 2.x, got {np.__version__}'"
        
    - name: Verify yearfrac installation
      run: |
        python -c "import yearfrac as yf; print(f'yearfrac imported successfully'); from datetime import datetime; result = yf.yearfrac(datetime(2018,12,15), datetime(2019,3,1)); print(f'YEARFRAC test result: {result:.15f}')"
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
        
    - name: Lint with flake8
      run: |
        flake8 xlcalculator/ --exclude=$(grep -v '^#' .gitignore | xargs | sed -e 's/ /,/g') --ignore=E131,W503 || true
        
  publish-status:
    name: Publish Test Status
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Test Results
      run: |
        echo "üß™ xlcalculator LeanSight Fork Test Status:"
        echo "‚úÖ Python 3.13 + NumPy 2.0 Compatibility: ${{ needs.test.result }}"
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "üéâ All tests passed! Fork is ready for use."
        else
          echo "‚ùå Tests failed. Please check logs."
        fi